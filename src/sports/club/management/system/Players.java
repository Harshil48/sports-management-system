/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sports.club.management.system;

/**
 *
 * @author Harshil
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.table.*;
import java.sql.*;
import net.proteanit.sql.*;

public class Players extends javax.swing.JFrame {

    /**
     * Creates new form Sports
     */
    public Players() {
        initComponents();
        playerstable.getTableHeader().setForeground(Color.darkGray);
        playerstable.getTableHeader().setFont(new Font("Arial",Font.BOLD,14));
        playerstable.setBackground(new Color(0,0,0,0));
        playersholder.setBackground(new Color(0,0,0,0));
        playersholder.getViewport().setOpaque(false);
        addplayerholder.setVisible(false);
        removesportholder.setVisible(false);
        display();
    }  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        carrier = new javax.swing.JScrollPane();
        support = new javax.swing.JPanel();
        holder = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        home = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        addplayer = new javax.swing.JButton();
        addplayerholder = new javax.swing.JPanel();
        playerid = new javax.swing.JLabel();
        playeridtxt = new javax.swing.JTextField();
        name = new javax.swing.JLabel();
        nametxt = new javax.swing.JTextField();
        sportname = new javax.swing.JLabel();
        sportnametxt = new javax.swing.JTextField();
        gender = new javax.swing.JLabel();
        gendertxt = new javax.swing.JTextField();
        addr = new javax.swing.JLabel();
        addrtxt = new javax.swing.JTextField();
        contact = new javax.swing.JLabel();
        contacttxt = new javax.swing.JTextField();
        DOB = new javax.swing.JLabel();
        dob = new com.toedter.calendar.JDateChooser();
        joinindate = new javax.swing.JLabel();
        jd = new com.toedter.calendar.JDateChooser();
        addplayersubmit = new javax.swing.JButton();
        removeplayer = new javax.swing.JButton();
        removesportholder = new javax.swing.JPanel();
        playerid1 = new javax.swing.JLabel();
        playerid1txt = new javax.swing.JTextField();
        info = new javax.swing.JLabel();
        removeplayersubmit = new javax.swing.JButton();
        playersholder = new javax.swing.JScrollPane();
        playerstable = new javax.swing.JTable();
        playersheader = new javax.swing.JLabel();
        imagepic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SPORTS CLUB MANAGEMENT SYSTEM ");
        setAlwaysOnTop(true);
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        carrier.setBackground(new java.awt.Color(255, 255, 255));
        carrier.setBorder(null);
        carrier.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        carrier.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        carrier.setColumnHeaderView(null);
        carrier.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        carrier.setOpaque(false);

        support.setPreferredSize(new java.awt.Dimension(1538, 1300));

        holder.setLayout(null);

        header.setBackground(new java.awt.Color(255, 204, 51));
        header.setFont(new java.awt.Font("Times New Roman", 1, 66)); // NOI18N
        header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header.setText("Sports  Club  Management  System");
        header.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        header.setOpaque(true);
        holder.add(header);
        header.setBounds(10, 10, 1500, 85);

        home.setBackground(new java.awt.Color(255, 204, 51));
        home.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        home.setText("HOME");
        home.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        home.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        holder.add(home);
        home.setBounds(1270, 110, 110, 30);

        logout.setBackground(new java.awt.Color(255, 204, 51));
        logout.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        logout.setText("LOGOUT");
        logout.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        logout.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        logout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        holder.add(logout);
        logout.setBounds(1390, 110, 110, 30);

        addplayer.setBackground(new java.awt.Color(255, 255, 153));
        addplayer.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        addplayer.setText("ADD PLAYER");
        addplayer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addplayer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addplayer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addplayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addplayerActionPerformed(evt);
            }
        });
        holder.add(addplayer);
        addplayer.setBounds(300, 710, 160, 60);

        addplayerholder.setOpaque(false);

        playerid.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        playerid.setText("PLAYER ID");
        playerid.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        playeridtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                playeridtxtKeyPressed(evt);
            }
        });

        name.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        name.setText("NAME");
        name.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        nametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nametxtKeyPressed(evt);
            }
        });

        sportname.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        sportname.setText("SPORT NAME");
        sportname.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        sportnametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sportnametxtKeyPressed(evt);
            }
        });

        gender.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        gender.setText("GENDER (M/F)");
        gender.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        gendertxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                gendertxtKeyPressed(evt);
            }
        });

        addr.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        addr.setText("ADDRESS");
        addr.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        addrtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addrtxtKeyPressed(evt);
            }
        });

        contact.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        contact.setText("CONTACT");
        contact.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        contacttxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                contacttxtKeyPressed(evt);
            }
        });

        DOB.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        DOB.setText("DATE OF BIRTH");
        DOB.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        dob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dobKeyPressed(evt);
            }
        });

        joinindate.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        joinindate.setText("JOINING DATE");
        joinindate.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jdKeyPressed(evt);
            }
        });

        addplayersubmit.setBackground(new java.awt.Color(255, 255, 102));
        addplayersubmit.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        addplayersubmit.setText("SUBMIT");
        addplayersubmit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addplayersubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addplayersubmit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addplayersubmit.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        addplayersubmit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addplayersubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addplayersubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addplayerholderLayout = new javax.swing.GroupLayout(addplayerholder);
        addplayerholder.setLayout(addplayerholderLayout);
        addplayerholderLayout.setHorizontalGroup(
            addplayerholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addplayerholderLayout.createSequentialGroup()
                .addGroup(addplayerholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addplayerholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(nametxt, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                        .addComponent(playerid, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sportnametxt, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                        .addComponent(playeridtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gendertxt, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                        .addComponent(sportname, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(gender)
                        .addComponent(addrtxt, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                        .addComponent(contact)
                        .addComponent(DOB)
                        .addComponent(contacttxt, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                        .addComponent(addr, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(joinindate, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addplayerholderLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(addplayersubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        addplayerholderLayout.setVerticalGroup(
            addplayerholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addplayerholderLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(playerid, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(playeridtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sportname, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(sportnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gender)
                .addGap(0, 0, 0)
                .addComponent(gendertxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addr)
                .addGap(0, 0, 0)
                .addComponent(addrtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contact)
                .addGap(0, 0, 0)
                .addComponent(contacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DOB)
                .addGap(0, 0, 0)
                .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(joinindate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(addplayersubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        holder.add(addplayerholder);
        addplayerholder.setBounds(250, 780, 270, 445);

        removeplayer.setBackground(new java.awt.Color(255, 255, 153));
        removeplayer.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        removeplayer.setText("REMOVE PLAYER");
        removeplayer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        removeplayer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeplayer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeplayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeplayerActionPerformed(evt);
            }
        });
        holder.add(removeplayer);
        removeplayer.setBounds(640, 710, 180, 60);

        removesportholder.setOpaque(false);

        playerid1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        playerid1.setText("PLAYER ID");
        playerid1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        playerid1txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                playerid1txtKeyPressed(evt);
            }
        });

        info.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        info.setText("(Enter Player Id of the Player to be removed)");

        removeplayersubmit.setBackground(new java.awt.Color(255, 255, 102));
        removeplayersubmit.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        removeplayersubmit.setText("SUBMIT");
        removeplayersubmit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        removeplayersubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeplayersubmit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeplayersubmit.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        removeplayersubmit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeplayersubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeplayersubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removesportholderLayout = new javax.swing.GroupLayout(removesportholder);
        removesportholder.setLayout(removesportholderLayout);
        removesportholderLayout.setHorizontalGroup(
            removesportholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removesportholderLayout.createSequentialGroup()
                .addGroup(removesportholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(info, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(removesportholderLayout.createSequentialGroup()
                        .addGroup(removesportholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playerid1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(playerid1txt, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(removesportholderLayout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(removeplayersubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        removesportholderLayout.setVerticalGroup(
            removesportholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removesportholderLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(playerid1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(playerid1txt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeplayersubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        holder.add(removesportholder);
        removesportholder.setBounds(600, 770, 270, 130);

        playersholder.setBackground(new java.awt.Color(255, 255, 255));
        playersholder.setBorder(null);
        playersholder.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        playersholder.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        playersholder.setOpaque(false);

        playerstable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        playerstable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        playerstable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PLAYER ID", "NAME", "SPORT NAME", "GENDER", "ADDRESS", "CONTACT", "DATE OF BIRTH", "JOINING DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        playerstable.setEnabled(false);
        playerstable.setGridColor(new java.awt.Color(0, 0, 0));
        playerstable.setOpaque(false);
        playerstable.setRowHeight(25);
        playerstable.setRowMargin(2);
        playerstable.setRowSelectionAllowed(false);
        playerstable.setShowGrid(true);
        playerstable.getTableHeader().setResizingAllowed(false);
        playerstable.getTableHeader().setReorderingAllowed(false);
        playersholder.setViewportView(playerstable);

        holder.add(playersholder);
        playersholder.setBounds(30, 210, 1460, 480);

        playersheader.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        playersheader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playersheader.setText("PLAYERS");
        playersheader.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        holder.add(playersheader);
        playersheader.setBounds(0, 130, 1538, 80);

        imagepic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagepic.setIcon(new javax.swing.ImageIcon("C:\\Users\\Harshil\\Pictures\\Saved Pictures\\pic.png")); // NOI18N
        imagepic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        holder.add(imagepic);
        imagepic.setBounds(-20, -20, 1580, 1340);

        javax.swing.GroupLayout supportLayout = new javax.swing.GroupLayout(support);
        support.setLayout(supportLayout);
        supportLayout.setHorizontalGroup(
            supportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supportLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(holder, javax.swing.GroupLayout.PREFERRED_SIZE, 1538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        supportLayout.setVerticalGroup(
            supportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supportLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(holder, javax.swing.GroupLayout.PREFERRED_SIZE, 1300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        carrier.setViewportView(support);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(carrier, javax.swing.GroupLayout.DEFAULT_SIZE, 1538, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(carrier, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1552, 843));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void insert()
    {
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@Dell-HsB:1521:xe", "HSB", "4803");
            String query="insert into HSB.players values ('"+playeridtxt.getText()+"','"+nametxt.getText()+"','"+sportnametxt.getText()+"','"+gendertxt.getText()+"','"+addrtxt.getText()+"','"+contacttxt.getText()+"',?,?)";
            PreparedStatement pstmt=con.prepareStatement(query);
            pstmt.setString(1,((JTextField)dob.getDateEditor().getUiComponent()).getText());
            pstmt.setString(2,((JTextField)jd.getDateEditor().getUiComponent()).getText());
            pstmt.execute();
            con.close();
            playeridtxt.setText(null);
            nametxt.setText(null);
            sportnametxt.setText(null);
            gendertxt.setText(null);
            addrtxt.setText(null);
            contacttxt.setText(null);
            dob.setDate(null);
            jd.setDate(null);
            playeridtxt.requestFocus();
           } catch (Exception e) {
            JOptionPane.showMessageDialog(removeplayer, "PLAYER ID ALREADY EXISTS OR INVALID GENDER ENTRY", "ERROR", JOptionPane.ERROR_MESSAGE);
           } 
    }
    
    private void display()
    {
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@Dell-HsB:1521:xe", "HSB", "4803");
            Statement stmt=con.createStatement();
            String query="select * from HSB.players order by player_id";
            ResultSet rs=stmt.executeQuery(query);
            playerstable.setModel(DbUtils.resultSetToTableModel(rs));
            con.close();
           } catch (Exception e) {
            System.out.println(e);
       } 
    }
    
    private void remove()
    {
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@Dell-HsB:1521:xe", "HSB", "4803");
            Statement stmt=con.createStatement();
            String query="delete HSB.players where player_id = '"+playerid1txt.getText()+"' ";
            ResultSet rs=stmt.executeQuery(query);
            con.close();
           } catch (Exception e) {
            System.out.println(e);
       } 
    }
    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        new Home().setVisible(true);
        super.dispose();
    }//GEN-LAST:event_homeActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        JOptionPane.showMessageDialog(playerstable, "SUCCESSFULLY LOGGED OUT", "LOGOUT",JOptionPane.INFORMATION_MESSAGE);
        new SCMS().setVisible(true);
        super.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void removeplayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeplayerActionPerformed
        addplayerholder.setVisible(false);
        removesportholder.setVisible(true);
    }//GEN-LAST:event_removeplayerActionPerformed

    private void addplayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addplayerActionPerformed
        removesportholder.setVisible(false);
        addplayerholder.setVisible(true);
    }//GEN-LAST:event_addplayerActionPerformed

    private void removeplayersubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeplayersubmitActionPerformed
        if(playerid1txt.getText().isBlank())
        {
            JOptionPane.showMessageDialog(removeplayer, "ALL FIELDS ARE MANADATORY", "ERROR", JOptionPane.ERROR_MESSAGE);
        } 
        else
        {
        remove();
        display();
        playerid1txt.setText(null);
        }
    }//GEN-LAST:event_removeplayersubmitActionPerformed

    private void playeridtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_playeridtxtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            nametxt.requestFocus();
        }
    }//GEN-LAST:event_playeridtxtKeyPressed

    private void sportnametxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sportnametxtKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            gendertxt.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            nametxt.requestFocus();
        }
        }
    }//GEN-LAST:event_sportnametxtKeyPressed

    private void gendertxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_gendertxtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            addrtxt.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            sportnametxt.requestFocus();
        }
        }
    }//GEN-LAST:event_gendertxtKeyPressed

    private void playerid1txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_playerid1txtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            remove();
            display();
            playerid1txt.setText(null);
        }   
    }//GEN-LAST:event_playerid1txtKeyPressed

    private void addrtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addrtxtKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            contacttxt.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            gendertxt.requestFocus();
        }
        }
    }//GEN-LAST:event_addrtxtKeyPressed

    private void contacttxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contacttxtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            dob.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            addrtxt.requestFocus();
        }
        }
    }//GEN-LAST:event_contacttxtKeyPressed

    private void addplayersubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addplayersubmitActionPerformed
        if(playeridtxt.getText().isBlank()||playeridtxt.getText().isBlank()||nametxt.getText().isBlank()||sportnametxt.getText().isBlank()||gendertxt.getText().isBlank()||addrtxt.getText().isBlank()||contacttxt.getText().isBlank()||dob.getDate()==null||jd.getDate()==null)
        {
            JOptionPane.showMessageDialog(removeplayer, "ALL FIELDS ARE MANADATORY", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        insert();
        display();
        }
    }//GEN-LAST:event_addplayersubmitActionPerformed

    private void nametxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nametxtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            sportnametxt.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            playeridtxt.requestFocus();
        }
        }
    }//GEN-LAST:event_nametxtKeyPressed

    private void dobKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dobKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            jd.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            contacttxt.requestFocus();
        }
        }
    }//GEN-LAST:event_dobKeyPressed

    private void jdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            insert();
            display();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            dob.requestFocus();
        }
        }
    }//GEN-LAST:event_jdKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    new Players().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DOB;
    private javax.swing.JButton addplayer;
    private javax.swing.JPanel addplayerholder;
    private javax.swing.JButton addplayersubmit;
    private javax.swing.JLabel addr;
    private javax.swing.JTextField addrtxt;
    private javax.swing.JScrollPane carrier;
    private javax.swing.JLabel contact;
    private javax.swing.JTextField contacttxt;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JLabel gender;
    private javax.swing.JTextField gendertxt;
    private javax.swing.JLabel header;
    private javax.swing.JPanel holder;
    private javax.swing.JButton home;
    private javax.swing.JLabel imagepic;
    private javax.swing.JLabel info;
    private com.toedter.calendar.JDateChooser jd;
    private javax.swing.JLabel joinindate;
    private javax.swing.JButton logout;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nametxt;
    private javax.swing.JLabel playerid;
    private javax.swing.JLabel playerid1;
    private javax.swing.JTextField playerid1txt;
    private javax.swing.JTextField playeridtxt;
    private javax.swing.JLabel playersheader;
    private javax.swing.JScrollPane playersholder;
    private javax.swing.JTable playerstable;
    private javax.swing.JButton removeplayer;
    private javax.swing.JButton removeplayersubmit;
    private javax.swing.JPanel removesportholder;
    private javax.swing.JLabel sportname;
    private javax.swing.JTextField sportnametxt;
    private javax.swing.JPanel support;
    // End of variables declaration//GEN-END:variables
}
