/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sports.club.management.system;

/**
 *
 * @author Harshil
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.table.*;
import java.sql.*;
import net.proteanit.sql.*;

public class Infrastructure extends javax.swing.JFrame {

    /**
     * Creates new form Sports
     */
    public Infrastructure() {
        initComponents();
        infratable.getTableHeader().setForeground(Color.darkGray);
        infratable.getTableHeader().setFont(new Font("Arial",Font.BOLD,14));
        infratable.setBackground(new Color(0,0,0,0));
        infraholder.setBackground(new Color(0,0,0,0));
        infraholder.getViewport().setOpaque(false);
        addinfraholder.setVisible(false);
        removeinfraholder.setVisible(false);
        display();
    }  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        carrier = new javax.swing.JScrollPane();
        support = new javax.swing.JPanel();
        holder = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        home = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        addinfra = new javax.swing.JButton();
        addinfraholder = new javax.swing.JPanel();
        infraid = new javax.swing.JLabel();
        infraidtxt = new javax.swing.JTextField();
        name = new javax.swing.JLabel();
        nametxt = new javax.swing.JTextField();
        cost = new javax.swing.JLabel();
        costtxt = new javax.swing.JTextField();
        type = new javax.swing.JLabel();
        typetxt = new javax.swing.JTextField();
        quantity = new javax.swing.JLabel();
        quantitytxt = new javax.swing.JTextField();
        addinfrasubmit = new javax.swing.JButton();
        optioninfo = new javax.swing.JLabel();
        removeinfra = new javax.swing.JButton();
        removeinfraholder = new javax.swing.JPanel();
        infraid1 = new javax.swing.JLabel();
        infraid1txt = new javax.swing.JTextField();
        info = new javax.swing.JLabel();
        removeinfrasubmit = new javax.swing.JButton();
        infraholder = new javax.swing.JScrollPane();
        infratable = new javax.swing.JTable();
        infraheader = new javax.swing.JLabel();
        imagepic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SPORTS CLUB MANAGEMENT SYSTEM ");
        setAlwaysOnTop(true);
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        carrier.setBackground(new java.awt.Color(255, 255, 255));
        carrier.setBorder(null);
        carrier.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        carrier.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        carrier.setColumnHeaderView(null);
        carrier.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        carrier.setOpaque(false);

        support.setPreferredSize(new java.awt.Dimension(1538, 1300));

        holder.setLayout(null);

        header.setBackground(new java.awt.Color(255, 204, 51));
        header.setFont(new java.awt.Font("Times New Roman", 1, 66)); // NOI18N
        header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header.setText("Sports  Club  Management  System");
        header.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        header.setOpaque(true);
        holder.add(header);
        header.setBounds(10, 10, 1500, 85);

        home.setBackground(new java.awt.Color(255, 204, 51));
        home.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        home.setText("HOME");
        home.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        home.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        holder.add(home);
        home.setBounds(1270, 110, 110, 30);

        logout.setBackground(new java.awt.Color(255, 204, 51));
        logout.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        logout.setText("LOGOUT");
        logout.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        logout.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        logout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        holder.add(logout);
        logout.setBounds(1390, 110, 110, 30);

        addinfra.setBackground(new java.awt.Color(255, 255, 153));
        addinfra.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        addinfra.setText("ADD INFRA");
        addinfra.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addinfra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addinfra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addinfra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addinfraActionPerformed(evt);
            }
        });
        holder.add(addinfra);
        addinfra.setBounds(300, 650, 160, 60);

        addinfraholder.setOpaque(false);

        infraid.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        infraid.setText("INFRASTRUCTURE ID");
        infraid.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        infraidtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                infraidtxtKeyPressed(evt);
            }
        });

        name.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        name.setText("NAME");
        name.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        nametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nametxtKeyPressed(evt);
            }
        });

        cost.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        cost.setText("COST");
        cost.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        costtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                costtxtKeyPressed(evt);
            }
        });

        type.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        type.setText("TYPE (0/1)");
        type.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        typetxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                typetxtKeyPressed(evt);
            }
        });

        quantity.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        quantity.setText("QUANTITY");
        quantity.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        quantitytxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quantitytxtKeyPressed(evt);
            }
        });

        addinfrasubmit.setBackground(new java.awt.Color(255, 255, 102));
        addinfrasubmit.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        addinfrasubmit.setText("SUBMIT");
        addinfrasubmit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addinfrasubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addinfrasubmit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addinfrasubmit.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        addinfrasubmit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addinfrasubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addinfrasubmitActionPerformed(evt);
            }
        });

        optioninfo.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        optioninfo.setText("(0 - General , 1 - Sport Specific)");

        javax.swing.GroupLayout addinfraholderLayout = new javax.swing.GroupLayout(addinfraholder);
        addinfraholder.setLayout(addinfraholderLayout);
        addinfraholderLayout.setHorizontalGroup(
            addinfraholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addinfraholderLayout.createSequentialGroup()
                .addGroup(addinfraholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(type)
                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(infraid)
                    .addComponent(name)
                    .addComponent(cost)
                    .addGroup(addinfraholderLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(addinfrasubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(optioninfo)
                    .addComponent(quantitytxt, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)
                    .addComponent(typetxt)
                    .addComponent(costtxt)
                    .addComponent(nametxt)
                    .addComponent(infraidtxt))
                .addGap(0, 0, 0))
        );
        addinfraholderLayout.setVerticalGroup(
            addinfraholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addinfraholderLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(infraid, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(infraidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(costtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(type)
                .addGap(0, 0, 0)
                .addComponent(typetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(optioninfo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quantity)
                .addGap(0, 0, 0)
                .addComponent(quantitytxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addinfrasubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        holder.add(addinfraholder);
        addinfraholder.setBounds(250, 730, 277, 310);

        removeinfra.setBackground(new java.awt.Color(255, 255, 153));
        removeinfra.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        removeinfra.setText("REMOVE INFRA");
        removeinfra.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        removeinfra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeinfra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeinfra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeinfraActionPerformed(evt);
            }
        });
        holder.add(removeinfra);
        removeinfra.setBounds(660, 650, 180, 60);

        removeinfraholder.setOpaque(false);

        infraid1.setFont(new java.awt.Font("Georgia", 0, 16)); // NOI18N
        infraid1.setText("INFRASTRUCTURE  ID");
        infraid1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        infraid1txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                infraid1txtKeyPressed(evt);
            }
        });

        info.setFont(new java.awt.Font("Georgia", 0, 13)); // NOI18N
        info.setText("(Enter Infrastructure Id of the Infra to be removed)");

        removeinfrasubmit.setBackground(new java.awt.Color(255, 255, 102));
        removeinfrasubmit.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        removeinfrasubmit.setText("SUBMIT");
        removeinfrasubmit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        removeinfrasubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeinfrasubmit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeinfrasubmit.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        removeinfrasubmit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeinfrasubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeinfrasubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout removeinfraholderLayout = new javax.swing.GroupLayout(removeinfraholder);
        removeinfraholder.setLayout(removeinfraholderLayout);
        removeinfraholderLayout.setHorizontalGroup(
            removeinfraholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeinfraholderLayout.createSequentialGroup()
                .addGroup(removeinfraholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(info, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(removeinfraholderLayout.createSequentialGroup()
                        .addComponent(infraid1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(infraid1txt))
                .addContainerGap())
            .addGroup(removeinfraholderLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(removeinfrasubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        removeinfraholderLayout.setVerticalGroup(
            removeinfraholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(removeinfraholderLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(infraid1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(infraid1txt, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(removeinfrasubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        holder.add(removeinfraholder);
        removeinfraholder.setBounds(600, 720, 300, 130);

        infraholder.setBackground(new java.awt.Color(255, 255, 255));
        infraholder.setBorder(null);
        infraholder.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        infraholder.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        infraholder.setOpaque(false);

        infratable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        infratable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        infratable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PLAYER ID", "NAME", "SPORT NAME", "GENDER", "ADDRESS", "CONTACT", "DATE OF BIRTH", "JOINING DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        infratable.setEnabled(false);
        infratable.setGridColor(new java.awt.Color(0, 0, 0));
        infratable.setOpaque(false);
        infratable.setRowHeight(25);
        infratable.setRowMargin(2);
        infratable.setRowSelectionAllowed(false);
        infratable.setShowGrid(true);
        infratable.getTableHeader().setResizingAllowed(false);
        infratable.getTableHeader().setReorderingAllowed(false);
        infraholder.setViewportView(infratable);

        holder.add(infraholder);
        infraholder.setBounds(30, 210, 1460, 400);

        infraheader.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        infraheader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        infraheader.setText("INFRASTRUCTURE");
        infraheader.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        holder.add(infraheader);
        infraheader.setBounds(0, 130, 1538, 80);

        imagepic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagepic.setIcon(new javax.swing.ImageIcon("C:\\Users\\Harshil\\Pictures\\Saved Pictures\\pic.png")); // NOI18N
        imagepic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        holder.add(imagepic);
        imagepic.setBounds(-20, -20, 1580, 1340);

        javax.swing.GroupLayout supportLayout = new javax.swing.GroupLayout(support);
        support.setLayout(supportLayout);
        supportLayout.setHorizontalGroup(
            supportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supportLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(holder, javax.swing.GroupLayout.PREFERRED_SIZE, 1538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        supportLayout.setVerticalGroup(
            supportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supportLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(holder, javax.swing.GroupLayout.PREFERRED_SIZE, 1300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        carrier.setViewportView(support);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(carrier, javax.swing.GroupLayout.DEFAULT_SIZE, 1538, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(carrier, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1552, 843));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void insert()
    {
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@Dell-HsB:1521:xe", "HSB", "4803");
            Statement stmt=con.createStatement();
            String query = null;
            if(typetxt.getText().equals("0"))
            {
              query="insert into HSB.infrastructure values ('"+infraidtxt.getText()+"','"+nametxt.getText()+"','"+costtxt.getText()+"','General','"+quantitytxt.getText()+"')";
            }
            else if(typetxt.getText().equals("1"))
            {
              query="insert into HSB.infrastructure values ('"+infraidtxt.getText()+"','"+nametxt.getText()+"','"+costtxt.getText()+"','Sports Specific','"+quantitytxt.getText()+"')";
            }
            ResultSet rs=stmt.executeQuery(query);
            con.close();
            infraidtxt.setText(null);
            nametxt.setText(null);
            costtxt.setText(null);
            typetxt.setText(null);
            quantitytxt.setText(null);
            infraidtxt.requestFocus();
           } catch (Exception e) {
            JOptionPane.showMessageDialog(removeinfra, "INFRASTRUCTURE ID ALREADY EXISTS", "ERROR", JOptionPane.ERROR_MESSAGE);
       } 
    }
    
    private void display()
    {
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@Dell-HsB:1521:xe", "HSB", "4803");
            Statement stmt=con.createStatement();
            String query="select * from HSB.infrastructure order by infrastructure_id";
            ResultSet rs=stmt.executeQuery(query);
            infratable.setModel(DbUtils.resultSetToTableModel(rs));
            con.close();
           } catch (Exception e) {
            System.out.println(e);
       } 
    }
    
    private void remove()
    {
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@Dell-HsB:1521:xe", "system", "0000");
            Statement stmt=con.createStatement();
            String query="delete HSB.infrastructure where infrastructure_id = '"+infraid1txt.getText()+"' ";
            ResultSet rs=stmt.executeQuery(query);
            con.close();
           } catch (Exception e) {
            System.out.println(e);
       } 
    }
    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        new Home().setVisible(true);
        super.dispose();
    }//GEN-LAST:event_homeActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        JOptionPane.showMessageDialog(infratable, "SUCCESSFULLY LOGGED OUT", "LOGOUT",JOptionPane.INFORMATION_MESSAGE);
        new SCMS().setVisible(true);
        super.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void removeinfraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeinfraActionPerformed
        addinfraholder.setVisible(false);
        removeinfraholder.setVisible(true);
    }//GEN-LAST:event_removeinfraActionPerformed

    private void addinfraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addinfraActionPerformed
        removeinfraholder.setVisible(false);
        addinfraholder.setVisible(true);
    }//GEN-LAST:event_addinfraActionPerformed

    private void removeinfrasubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeinfrasubmitActionPerformed
        if(infraid1txt.getText().isBlank())
        {
            JOptionPane.showMessageDialog(removeinfra, "ENTER VALID IFRASTRUCTURE ID", "ERROR", JOptionPane.ERROR_MESSAGE);
        } 
        else
        {
        remove();
        display();
        infraid1txt.setText(null);
        }
    }//GEN-LAST:event_removeinfrasubmitActionPerformed

    private void infraidtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_infraidtxtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            nametxt.requestFocus();
        }
    }//GEN-LAST:event_infraidtxtKeyPressed

    private void costtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_costtxtKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            typetxt.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            nametxt.requestFocus();
        }
        }
    }//GEN-LAST:event_costtxtKeyPressed

    private void typetxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_typetxtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            quantitytxt.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            costtxt.requestFocus();
        }
        }
    }//GEN-LAST:event_typetxtKeyPressed

    private void infraid1txtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_infraid1txtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            remove();
            display();
            infraid1txt.setText(null);
        }   
    }//GEN-LAST:event_infraid1txtKeyPressed

    private void quantitytxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quantitytxtKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            if(infraidtxt.getText().isBlank()||infraidtxt.getText().isBlank()||nametxt.getText().isBlank()||costtxt.getText().isBlank()||typetxt.getText().isBlank()||quantitytxt.getText().isBlank())
        {
            JOptionPane.showMessageDialog(removeinfra, "ALL FIELDS ARE MANADATORY", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        insert();
        display();
        }
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            typetxt.requestFocus();
        }
        }
    }//GEN-LAST:event_quantitytxtKeyPressed

    private void addinfrasubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addinfrasubmitActionPerformed
        if(infraidtxt.getText().isBlank()||infraidtxt.getText().isBlank()||nametxt.getText().isBlank()||costtxt.getText().isBlank()||typetxt.getText().isBlank()||quantitytxt.getText().isBlank())
        {
            JOptionPane.showMessageDialog(removeinfra, "ALL FIELDS ARE MANADATORY", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        insert();
        display();
        }
    }//GEN-LAST:event_addinfrasubmitActionPerformed

    private void nametxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nametxtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            costtxt.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            infraidtxt.requestFocus();
        }
        }
    }//GEN-LAST:event_nametxtKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    new Infrastructure().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addinfra;
    private javax.swing.JPanel addinfraholder;
    private javax.swing.JButton addinfrasubmit;
    private javax.swing.JScrollPane carrier;
    private javax.swing.JLabel cost;
    private javax.swing.JTextField costtxt;
    private javax.swing.JLabel header;
    private javax.swing.JPanel holder;
    private javax.swing.JButton home;
    private javax.swing.JLabel imagepic;
    private javax.swing.JLabel info;
    private javax.swing.JLabel infraheader;
    private javax.swing.JScrollPane infraholder;
    private javax.swing.JLabel infraid;
    private javax.swing.JLabel infraid1;
    private javax.swing.JTextField infraid1txt;
    private javax.swing.JTextField infraidtxt;
    private javax.swing.JTable infratable;
    private javax.swing.JButton logout;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nametxt;
    private javax.swing.JLabel optioninfo;
    private javax.swing.JLabel quantity;
    private javax.swing.JTextField quantitytxt;
    private javax.swing.JButton removeinfra;
    private javax.swing.JPanel removeinfraholder;
    private javax.swing.JButton removeinfrasubmit;
    private javax.swing.JPanel support;
    private javax.swing.JLabel type;
    private javax.swing.JTextField typetxt;
    // End of variables declaration//GEN-END:variables
}
