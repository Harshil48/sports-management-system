/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sports.club.management.system;

/**
 *
 * @author Harshil
 */
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.table.*;
import java.sql.*;
import net.proteanit.sql.*;

public class Guests extends javax.swing.JFrame {

    /**
     * Creates new form Sports
     */
    public Guests() {
        initComponents();
        gueststable.getTableHeader().setForeground(Color.darkGray);
        gueststable.getTableHeader().setFont(new Font("Arial",Font.BOLD,14));
        gueststable.setBackground(new Color(0,0,0,0));
        guestsholder.setBackground(new Color(0,0,0,0));
        guestsholder.getViewport().setOpaque(false);
        addguestholder.setVisible(false);  
        display();
    }  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        carrier = new javax.swing.JScrollPane();
        support = new javax.swing.JPanel();
        holder = new javax.swing.JPanel();
        header = new javax.swing.JLabel();
        home = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        addguest = new javax.swing.JButton();
        addguestholder = new javax.swing.JPanel();
        guestname = new javax.swing.JLabel();
        guestnametxt = new javax.swing.JTextField();
        event = new javax.swing.JLabel();
        eventtxt = new javax.swing.JTextField();
        contact = new javax.swing.JLabel();
        contacttxt = new javax.swing.JTextField();
        DOI = new javax.swing.JLabel();
        doi = new com.toedter.calendar.JDateChooser();
        addguestsubmit = new javax.swing.JButton();
        guestsholder = new javax.swing.JScrollPane();
        gueststable = new javax.swing.JTable();
        guestsheader = new javax.swing.JLabel();
        imagepic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SPORTS CLUB MANAGEMENT SYSTEM ");
        setAlwaysOnTop(true);
        setExtendedState(JFrame.MAXIMIZED_BOTH);

        carrier.setBackground(new java.awt.Color(255, 255, 255));
        carrier.setBorder(null);
        carrier.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        carrier.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        carrier.setColumnHeaderView(null);
        carrier.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        carrier.setOpaque(false);

        support.setPreferredSize(new java.awt.Dimension(1538, 1300));

        holder.setLayout(null);

        header.setBackground(new java.awt.Color(255, 204, 51));
        header.setFont(new java.awt.Font("Times New Roman", 1, 66)); // NOI18N
        header.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        header.setText("Sports  Club  Management  System");
        header.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        header.setOpaque(true);
        holder.add(header);
        header.setBounds(10, 10, 1500, 85);

        home.setBackground(new java.awt.Color(255, 204, 51));
        home.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        home.setText("HOME");
        home.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        home.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        home.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        holder.add(home);
        home.setBounds(1270, 110, 110, 30);

        logout.setBackground(new java.awt.Color(255, 204, 51));
        logout.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        logout.setText("LOGOUT");
        logout.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        logout.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        logout.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        holder.add(logout);
        logout.setBounds(1390, 110, 110, 30);

        addguest.setBackground(new java.awt.Color(255, 255, 153));
        addguest.setFont(new java.awt.Font("Calibri", 0, 22)); // NOI18N
        addguest.setText("ADD GUEST");
        addguest.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addguest.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addguest.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addguest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addguestActionPerformed(evt);
            }
        });
        holder.add(addguest);
        addguest.setBounds(640, 670, 160, 60);

        addguestholder.setOpaque(false);

        guestname.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        guestname.setText("GUEST NAME");
        guestname.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        guestnametxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                guestnametxtKeyPressed(evt);
            }
        });

        event.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        event.setText("EVENT");
        event.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        eventtxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                eventtxtKeyPressed(evt);
            }
        });

        contact.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        contact.setText("CONTACT");
        contact.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        contacttxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                contacttxtKeyPressed(evt);
            }
        });

        DOI.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        DOI.setText("DATE OF INVITATION");
        DOI.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        doi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                doiKeyPressed(evt);
            }
        });

        addguestsubmit.setBackground(new java.awt.Color(255, 255, 102));
        addguestsubmit.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        addguestsubmit.setText("SUBMIT");
        addguestsubmit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addguestsubmit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addguestsubmit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addguestsubmit.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        addguestsubmit.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addguestsubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addguestsubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addguestholderLayout = new javax.swing.GroupLayout(addguestholder);
        addguestholder.setLayout(addguestholderLayout);
        addguestholderLayout.setHorizontalGroup(
            addguestholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addguestholderLayout.createSequentialGroup()
                .addGroup(addguestholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addguestholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(guestnametxt, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                        .addComponent(guestname, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(contact)
                        .addComponent(DOI)
                        .addComponent(contacttxt, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                        .addComponent(doi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addguestholderLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(addguestsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(event)
                    .addComponent(eventtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addguestholderLayout.setVerticalGroup(
            addguestholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addguestholderLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(guestname, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(guestnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contact)
                .addGap(0, 0, 0)
                .addComponent(contacttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(event, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(eventtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DOI)
                .addGap(0, 0, 0)
                .addComponent(doi, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addguestsubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        holder.add(addguestholder);
        addguestholder.setBounds(590, 750, 270, 240);

        guestsholder.setBackground(new java.awt.Color(255, 255, 255));
        guestsholder.setBorder(null);
        guestsholder.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        guestsholder.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        guestsholder.setOpaque(false);

        gueststable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        gueststable.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        gueststable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PLAYER ID", "NAME", "SPORT NAME", "GENDER", "ADDRESS", "CONTACT", "DATE OF BIRTH", "JOINING DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        gueststable.setEnabled(false);
        gueststable.setGridColor(new java.awt.Color(0, 0, 0));
        gueststable.setOpaque(false);
        gueststable.setRowHeight(25);
        gueststable.setRowMargin(2);
        gueststable.setRowSelectionAllowed(false);
        gueststable.setShowGrid(true);
        gueststable.getTableHeader().setResizingAllowed(false);
        gueststable.getTableHeader().setReorderingAllowed(false);
        guestsholder.setViewportView(gueststable);

        holder.add(guestsholder);
        guestsholder.setBounds(30, 210, 1460, 430);

        guestsheader.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        guestsheader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        guestsheader.setText("GUESTS  INVITED");
        guestsheader.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        holder.add(guestsheader);
        guestsheader.setBounds(0, 130, 1538, 80);

        imagepic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagepic.setIcon(new javax.swing.ImageIcon("C:\\Users\\Harshil\\Pictures\\Saved Pictures\\pic.png")); // NOI18N
        imagepic.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        holder.add(imagepic);
        imagepic.setBounds(-20, -20, 1580, 1340);

        javax.swing.GroupLayout supportLayout = new javax.swing.GroupLayout(support);
        support.setLayout(supportLayout);
        supportLayout.setHorizontalGroup(
            supportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supportLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(holder, javax.swing.GroupLayout.PREFERRED_SIZE, 1538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        supportLayout.setVerticalGroup(
            supportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supportLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(holder, javax.swing.GroupLayout.PREFERRED_SIZE, 1300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        carrier.setViewportView(support);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(carrier, javax.swing.GroupLayout.DEFAULT_SIZE, 1538, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(carrier, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1552, 843));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void insert()
    {
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@Dell-HsB:1521:xe", "HSB", "4803");
            String query="insert into HSB.guests values ('"+guestnametxt.getText()+"','"+contacttxt.getText()+"','"+eventtxt.getText()+"',?)";
            PreparedStatement pstmt=con.prepareStatement(query);
            pstmt.setString(1,((JTextField)doi.getDateEditor().getUiComponent()).getText());
            pstmt.execute();
            con.close();
            guestnametxt.setText(null);
            eventtxt.setText(null);
            contacttxt.setText(null);
            doi.setDate(null);
           } catch (Exception e) {
            System.out.println(e);
       } 
    }
    
    private void display()
    {
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection con = DriverManager.getConnection("jdbc:oracle:thin:@Dell-HsB:1521:xe", "HSB", "4803");
            Statement stmt=con.createStatement();
            String query="select * from HSB.guests order by date_invited";
            ResultSet rs=stmt.executeQuery(query);
            gueststable.setModel(DbUtils.resultSetToTableModel(rs));
            con.close();
           } catch (Exception e) {
            System.out.println(e);
       } 
    }
    
    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        new Home().setVisible(true);
        super.dispose();
    }//GEN-LAST:event_homeActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        JOptionPane.showMessageDialog(gueststable, "SUCCESSFULLY LOGGED OUT", "LOGOUT",JOptionPane.INFORMATION_MESSAGE);
        new SCMS().setVisible(true);
        super.dispose();
    }//GEN-LAST:event_logoutActionPerformed

    private void addguestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addguestActionPerformed
        addguestholder.setVisible(true);
    }//GEN-LAST:event_addguestActionPerformed

    private void eventtxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eventtxtKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            doi.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            contacttxt.requestFocus();
        }
        }
    }//GEN-LAST:event_eventtxtKeyPressed

    private void contacttxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contacttxtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            eventtxt.requestFocus();
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            guestnametxt.requestFocus();
        }
        }
    }//GEN-LAST:event_contacttxtKeyPressed

    private void addguestsubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addguestsubmitActionPerformed
        if(guestnametxt.getText().isBlank()||contacttxt.getText().isBlank()||eventtxt.getText().isBlank()||doi.getDate()==null)
        {
             JOptionPane.showMessageDialog(addguest, "ALL FIELDS ARE MANADATORY", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else if(contacttxt.getText().length()!=10)
        {
        JOptionPane.showMessageDialog(addguest, "INVALID CONTACT NUMBER", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        insert();
        display();
        }
    }//GEN-LAST:event_addguestsubmitActionPerformed

    private void guestnametxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_guestnametxtKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN)
        {
            contacttxt.requestFocus();
        }    
    }//GEN-LAST:event_guestnametxtKeyPressed

    private void doiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_doiKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            if(guestnametxt.getText().isBlank()||contacttxt.getText().isBlank()||eventtxt.getText().isBlank()||doi.getDate()==null)
        {
             JOptionPane.showMessageDialog(addguest, "ALL FIELDS ARE MANADATORY", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
        insert();
        display();
        }
        }
        else
        {
            if(evt.getKeyCode()==KeyEvent.VK_UP)
        {
            eventtxt.requestFocus();
        }
        }
    }//GEN-LAST:event_doiKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    new Guests().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DOI;
    private javax.swing.JButton addguest;
    private javax.swing.JPanel addguestholder;
    private javax.swing.JButton addguestsubmit;
    private javax.swing.JScrollPane carrier;
    private javax.swing.JLabel contact;
    private javax.swing.JTextField contacttxt;
    private com.toedter.calendar.JDateChooser doi;
    private javax.swing.JLabel event;
    private javax.swing.JTextField eventtxt;
    private javax.swing.JLabel guestname;
    private javax.swing.JTextField guestnametxt;
    private javax.swing.JLabel guestsheader;
    private javax.swing.JScrollPane guestsholder;
    private javax.swing.JTable gueststable;
    private javax.swing.JLabel header;
    private javax.swing.JPanel holder;
    private javax.swing.JButton home;
    private javax.swing.JLabel imagepic;
    private javax.swing.JButton logout;
    private javax.swing.JPanel support;
    // End of variables declaration//GEN-END:variables
}
